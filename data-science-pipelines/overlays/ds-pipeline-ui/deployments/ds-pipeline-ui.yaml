apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ds-pipeline-ui
    application-crd-id: data-science-pipelines
  name: ds-pipeline-ui
spec:
  selector:
    matchLabels:
      app: ds-pipeline-ui
      application-crd-id: data-science-pipelines
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: ds-pipeline-ui
        application-crd-id: data-science-pipelines
    spec:
      containers:
        - name: oauth-proxy
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          args:
            - --https-address=:8443
            - --provider=openshift
            - --openshift-service-account=ds-pipeline-ui
            - --upstream=http://localhost:3000
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --cookie-secret=SECRET
            - '--openshift-delegate-urls={"/": {"resource": "services", "verb": "get", "name": "ds-pipeline-ui", "namespace": "$(NAMESPACE)"}}'
            - --skip-auth-regex='(^/metrics|^/apis/v1beta1/healthz)'
          image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.8
          ports:
            - containerPort: 8443
              name: https
          livenessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - mountPath: /etc/tls/private
              name: proxy-tls
        - env:
            - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
              value: /etc/config/viewer-pod-template.json
            - name: MINIO_NAMESPACE   # We should review these hardcoded MINIO variables in the future
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: $(artifact_secret_name)
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secretkey
                  name: $(artifact_secret_name)
            - name: ALLOW_CUSTOM_VISUALIZATIONS
              value: "true"
            - name: ARGO_ARCHIVE_LOGS
              value: "true"
            - name: ML_PIPELINE_SERVICE_HOST
              value: ds-pipeline
            - name: ML_PIPELINE_SERVICE_PORT
              value: '8888'
          image: frontend
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - '-'
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          name: ds-pipeline-ui
          ports:
            - containerPort: 3000
          readinessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - '-'
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 10m
              memory: 70Mi
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
              readOnly: true
      serviceAccountName: ds-pipeline-ui
      volumes:
        - configMap:
            name: $(ds_pipelines_ui_configuration)
          name: config-volume
        - name: proxy-tls
          secret:
            secretName: ds-pipelines-ui-proxy-tls
